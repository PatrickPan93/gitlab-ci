.code-analysis:
  stage: code-analysis
  image: ${SONAR_SCANNER_IMAGE}
  variables:
    GLOBAL_PROJECT_ARGS: "-Dsonar.projectKey=${CI_PROJECT_NAME}
                          -Dsonar.projectName=${CI_PROJECT_NAME}
                          -Dsonar.projectVersion=${CI_COMMIT_REF_NAME}
                          -Dsonar.projectDescription=${CI_PROJECT_TITLE}
                          -Dsonar.language=${SONAR_PROJECT_LANG}
                          -Dsonar.source=${SCAN_DIR}"
    #-Dsonar.login=${SONAR_SERVER_LOGIN}:
    GLOBAL_SERVER_ARGS: "-Dsonar.ws.timeout=30
                          -Dsonar.links.homepage=${CI_PROJECT_URL}
                          -Dsonar.host.url=${SONAR_SERVER_URL}
                          -Dsonar.login=${SONAR_USER}
                          -Dsonar.password=${SONAR_PASSWORD}
                          -Dsonar.sourceEncoding=UTF-8"
    MULTI_BRANCH_ARGS: "-Dsonar.branch.name=${CI_COMMIT_REF_NAME}"
  #tags:
  #  - build
  # multi branches require sonarqube-community-branch-plugin installed in SonarQube Server.
  # -Dsonar.branch.name=${CI_COMMIT_REF_NAME}"
  # https://github.com/mc1arke/sonarqube-community-branch-plugin/tree/master
  script:
    #- echo $CI_MERGE_REQUEST_IID $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - "sonar-scanner ${GLOBAL_PROJECT_ARGS} ${GLOBAL_SERVER_ARGS} ${SONAR_SCAN_ARGS} ${MULTI_BRANCH_ARGS}"
    - "mv -f .scannerwork/report-task.txt target/"
  #artifacts:
  #  paths:
  #    - "${ARTIFACT_PATH}"
  rules:
    - if: " $RUN_CODE_ANALYSIS == 'no' "
      when: never
    - when: on_success

#### 获取代码扫描结果
.get-analysis-result:
  stage: get-analysis-result
  image: centos:8
  script:
    - |
      SONAR_REPORT_URL=$(grep "ceTaskUrl" target/report-task.txt  | awk -F = '{OFS="=";print $2,$3}')
      echo ${SONAR_REPORT_URL}


      for i in {1..10}
      do
        curl -k -u "${SONAR_USER}":"${SONAR_PASSWORD}" ${SONAR_REPORT_URL}  -o sonar_result.txt -s
        grep '"status":"SUCCESS"' sonar_result.txt  && SONAR_SCAN_RESULT='SUCCESS'

        if [ ${SONAR_SCAN_RESULT} == 'SUCCESS' ]
          then
            echo "${SONAR_SCAN_RESULT}"
            SONAR_SCAN_RESULT=SUCCESS

            curl -k -u "${SONAR_USER}":"${SONAR_PASSWORD}" "${SONAR_SERVER_URL}/api/qualitygates/project_status?projectKey=$CI_PROJECT_NAME&branch=$CI_COMMIT_REF_NAME" -o result.txt  -s
            echo "result info ---->>>>>"
            cat result.txt
            result=`cat result.txt | awk -F ':' '{print $3}' | awk -F '"' '{print$2}'`

            echo $result

            if [ $result == 'ERROR' ]
              then
                echo "${result}"
                exit 122
                break;
            else
                echo "success!"
                break;
            fi

        else
          SONAR_SCAN_RESULT='ERROR'
          echo "第$i次获取结果信息，不是成功状态，睡眠10秒！"
          cat sonar_result.txt
          sleep 10
        fi
      done
  rules:
    - if: " $RUN_CODE_ANALYSIS == 'no' "
      when: never
    - when: on_success